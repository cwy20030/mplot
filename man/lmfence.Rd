% Generated by roxygen2 (4.0.1): do not edit by hand
\name{lmfence}
\alias{lmfence}
\title{The fence procedure for linear models}
\usage{
lmfence(mf, cstar, nvmax, method = "ML", adaptive = TRUE, trace = TRUE,
  force.in = NULL, ...)
}
\arguments{
\item{fixed}{an object of class \code{\link[stats]{formula}}
specifying the full model that can be fitted.}

\item{data}{a data frame containing the variables in the full
model.  Currently this is required.  Future development will
look at the \code{lm} function to replicate functionality,
whereby if \code{data} is missing or variables are not found
in \code{data}, the variables are taken from
\code{environment(formula)}, typically the
environment from which \code{lmfence} is called.}

\item{cstar}{the boundary of the fence, typically found
through bootstrapping.}

\item{nvmax}{the maximum number of variables that will be
be considered in the model (the default is the number of
explanatory variables in \code{fixed}).}

\item{method}{the model selection method to be used. Currently
only \code{method = "ML"} is supported (perhaps in the future
\code{method = "MVC"} will be implemented).}

\item{adaptive}{logical. If \code{TRUE} the boundary of the fence is
given by cstar.  Otherwise, it the original (non-adaptive) fence
is performed where the boundary is cstar*hat(sigma)_{M,tildeM}.}

\item{trace}{logical. If \code{TRUE} the function prints out its
progress as it iterates up through the dimensions.}

\item{best.only}{logical.  If \code{TRUE} the function returns
only one model - the "best" one at the smallest model size for
which there is (at least) one candidate that passes the fence.
Otherwise it returns all candidate models which pass the fence
at that model size.}

\item{...}{optional extra parameters passed through (?? necessary)}
}
\description{
This function implements the fence procedure to
find the best linear model.  STILL NEED TO ADD IN THE OPTION
TO FORCE VARIABLES INTO THE MODEL (THIS SHOULD BE EASY TO
IMPLEMENT).
}
\examples{
n = 40 # sample size
beta = c(1,2,3,0,0)
K=length(beta)
set.seed(198)
X = cbind(1,matrix(rnorm(n*(K-1)),ncol=K-1))
e = rnorm(n)
y = X\%*\%beta + e
dat = data.frame(y,X[,-1])
# Non-adaptive approach (not recommended)
lmfence(y~.,data=dat,cstar=log(n),adaptive=FALSE)
}
\references{
Jiang et. al. (2008); Tarr, MÃ¼ller and Welsh (2014)
}
\seealso{
\code{\link{adaptfence}}, \code{\link{lmmfence}}

Other fence: \code{\link{af}}; \code{\link{glmfence}}
}

