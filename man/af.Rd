% Generated by roxygen2 (4.0.1): do not edit by hand
\name{af}
\alias{af}
\title{The adaptive fence procedure (currently only for linear models)}
\usage{
af(fixed, random, data, n.cores, method = "ML", B = 60, n.c = 20,
  best.only = FALSE, initial.stepwise = TRUE, ...)
}
\arguments{
\item{fixed}{an object of class \code{\link[stats]{formula}}
specifying the full model that can be fitted.}

\item{random}{(not yet implemented) an object of
class \code{\link[stats]{formula}}
specifying the random effect components.}

\item{data}{a data frame containing the variables in the full
model.  Currently this is required.  Future development will
look at the \code{lm} function to replicate functionality,
whereby if \code{data} is missing or variables are not found
in \code{data}, the variables are taken from
\code{environment(formula)}, typically the
environment from which \code{lmfence} is called.}

\item{method}{the model selection method to be used. Currently
only \code{method = "ML"} is supported (perhaps in the future
\code{method = "MVC"} will be implemented).}

\item{B}{number of bootstrap replications at each fence
boundary value}

\item{n.c}{number of boundary values to be considered}

\item{n.cores}{number of cores to be used when parallel
processing the bootstrap (currently only available on
UNIX-type machines, e.g. Mac OS X).}

\item{best.only}{logical.  A modification to the adaptive
procedure which considers all models at a particular
size that pass the fence hurdle when calculating the
p* values.  The rationale being that if a model is
'correct' then it will be the only model at that size
that passes the fence.  This can help to determine where
the correct peak is to select c*.}

\item{pch}{plotting 'character', i.e., symbol to use.
This can either be a single character or an integer
code for one of a set of graphics symbols.}

\item{initial.stepwise}{logical.  Performs an initial stepwise
procedure to look for the range of model sizes where attention
should be focussed. See details for implementation.}

\item{...}{optional extra parameters passed through (?? necessary)}
}
\description{
This function implements the adaptive fence procedure to
first find the optimal cstar value and then finds the
corresponding best (linear) model as described in Jiang et. al.
(2009) with some modifications.
}
\details{
The initial stepwise procedure performs forward stepwise model
selection using the AIC and backward stepwise model selection
using BIC.  In general the backwise selection via the more
conservative BIC will tend to select a smaller model than that
of the forward selection AIC approach.  The size of these two
models is found, and we go one dimension smaller and one dimension
bigger to estiamte a sensible range of c values over which to
perform a parametric bootstrap.  THIS DESCRIPTION IS VERY VAUGE
POSSIBLY NEEDS MORE DETAIL/MORE THOUGH ON HOW TO EXPRESS THE
PROCEDURE SUCCINCTLY.

This procedure can take some time.  It is recommended that you start
with a relatively small number of bootstrap samples and grid of c
values and increase both if required.

If you use \code{initial.stepwise=TRUE} you will need a smaller
grid of c values than if you select \code{initial.stepwise=FALSE}.
It can be interesting to check \code{initial.stepwise=FALSE} with a
small number of bootstrap replications over a sparse grid to ensure
that the \code{initial.stepwise=TRUE} has landed you in a reasonable
region.
}
\examples{
n = 100
set.seed(11)
e = rnorm(n)
x0 = 1
x1 = rnorm(n)
x2 = rnorm(n)
x3 = x1^2
x4 = x2^2
x5 = x1*x2

# Model I
yI = x0 + x1 + x2 + e
datI = data.frame(yI,x1,x2,x3,x4,x5)
af1 = af(yI~., data=datI, n.cores=2)
plot(af1)

# Model II
yII = x0 + x1 + x2 + x3 + x4 + x5 + e
datII = data.frame(yII,x1,x2,x3,x4,x5)
af2 = af(yII~., data=datII, n.cores=2)
plot(af2)

# Importance of initial.stepwise
y3 = x0 + x1 + 10*x2 + x3 + x4 + x5 + e
dat3 = data.frame(y3,x1,x2,x3,x4,x5)
# if initial.stepwise=FALSE too wide a range of c values is considered
# which can result in picking too small a model:
af3 = af(y3~.,data=dat3,n.cores=3,initial.stepwise=FALSE)
plot(af3)
lmfence(y3~.,dat=dat3,cstar=af3$c.star)
# if initial.stepwise = TRUE only 'reasonable' values of c are
# considered resulting in the correct model being picked:
af4 = af(y3~.,data=dat3,n.cores=3,initial.stepwise=TRUE)
plot(af4)
lmfence(y3~.,dat=dat3,cstar=af4$c.star)

# Real example
bfat.full = af(Bodyfat~.,data=bodyfat,n.cores=3,
          n.c=100,initial.stepwise=FALSE)
bfat.stepwise = af(Bodyfat~.,data=bodyfat,n.cores=3,
          n.c=50,initial.stepwise=TRUE)
}
\references{
Jiang et. al. (2009); Tarr, M\:uller and Welsh (2014)
}
\seealso{
\code{\link[mplot]{lmfence}}, \code{\link[mplot]{lmmfence}}

Other fence: \code{\link{lmfence}}
}

