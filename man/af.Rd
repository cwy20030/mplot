% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/af.R
\name{af}
\alias{af}
\title{The adaptive fence procedure}
\usage{
af(mf, B = 60, n.c = 20, initial.stepwise = FALSE, force.in = NULL,
  n.cores, nvmax, c.max, screen = FALSE, ...)
}
\arguments{
\item{mf}{a fitted 'full' model, the result of a call
to lm or glm (and in the future lme or lmer).}

\item{B}{number of bootstrap replications at each fence
boundary value}

\item{n.c}{number of boundary values to be considered}

\item{initial.stepwise}{logical.  Performs an initial stepwise
procedure to look for the range of model sizes where attention
should be focussed. See details for implementation.}

\item{force.in}{the names of variables that should be forced
into all estimated models.}

\item{n.cores}{number of cores to be used when parallel
processing the bootstrap.}

\item{nvmax}{size of the largest model that can still be
considered as a viable candidate.  Included for performance
reasons but if it is an active constraint it could lead to
missleading results.}

\item{c.max}{manually specify the upper boundary limit.
Only applies when \code{initial.stepwise=FALSE}.}

\item{...}{further arguments (currently unused)}
}
\description{
This function implements the adaptive fence procedure to
first find the optimal cstar value and then finds the
corresponding best model as described in Jiang et. al.
(2009) with some practical modifications.
}
\details{
The initial stepwise procedure performs forward stepwise model
selection using the AIC and backward stepwise model selection
using BIC.  In general the backwise selection via the more
conservative BIC will tend to select a smaller model than that
of the forward selection AIC approach.  The size of these two
models is found, and we go two dimensions smaller and larger
to estiamte a sensible range of \code{c} values over which to
perform a parametric bootstrap.

This procedure can take some time.  It is recommended that you start
with a relatively small number of bootstrap samples (\code{B})
and grid of boundary values (\code{n.c}) and increase both as
required.

If you use \code{initial.stepwise=TRUE} then in general you will
need a smaller grid of boundary values than if you select
\code{initial.stepwise=FALSE}.
It can be useful to check \code{initial.stepwise=FALSE} with a
small number of bootstrap replications over a sparse grid to ensure
that the \code{initial.stepwise=TRUE} has landed you in a reasonable
region.
}
\examples{
n = 100
set.seed(11)
e = rnorm(n)
x1 = rnorm(n)
x2 = rnorm(n)
x3 = x1^2
x4 = x2^2
x5 = x1*x2
x6 = rep(c("A","B"),n=50)
y = 1 + x1 + x2 + e
dat = data.frame(y,x1,x2,x3,x4,x5,x6)
lm1 = lm(y~.,data=dat)
af1 = af(lm1, n.cores=4, initial.stepwise=TRUE)
summary(af1)
\dontrun{
plot(af1)
}
}
\references{
Jiming Jiang, Thuan Nguyen, J. Sunil Rao,
  A simplified adaptive fence procedure, Statistics &
  Probability Letters, Volume 79, Issue 5, 1 March 2009,
  Pages 625-629, http://dx.doi.org/10.1016/j.spl.2008.10.014.
}
\seealso{
\code{\link{lmfence}}, \code{\link{glmfence}}

Other fence: \code{\link{glmfence}}; \code{\link{lmfence}}
}

